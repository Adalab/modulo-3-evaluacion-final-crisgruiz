{"version":3,"sources":["services/getDataFromApi.js","images/death.png","components/CharacterCard.js","components/CharacterList.js","components/FilterByName.js","components/FilterBySpecies.js","components/Filters.js","components/FilterNoFound.js","components/CharacterDetail.js","components/CharacterNoFound.js","images/logo.png","components/App.js","index.js"],"names":["getDataFromApi","fetch","then","response","json","data","results","map","character","id","name","image","specie","species","status","origin","episodes","episode","length","CharacterCard","props","to","className","src","death","alt","CharacterList","characterElements","this","characters","React","Component","FilterByName","htmlFor","type","value","onChange","ev","handleFilter","key","target","FilterBySpecies","Filters","action","onSubmit","preventDefault","onClick","handleReset","FilterNoFound","handleReturn","CharacterDetail","CharacterNoFound","App","useState","setCharacters","setName","setSpecies","useEffect","inputChange","filterCharacters","filter","toUpperCase","includes","sort","a","z","logo","exact","path","render","idUrl","match","params","selectCharacter","find","parseInt","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b11c85e1.chunk.js","sourcesContent":["const getDataFromApi = () => {\r\n  return fetch(\"https://rickandmortyapi.com/api/character\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          image: character.image,\r\n          specie: character.species,\r\n          status: character.status,\r\n          origin: character.origin.name,\r\n          episodes: character.episode.length,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","export default __webpack_public_path__ + \"static/media/death.c4cdc5a2.png\";","import \"../styleSheets/layout/CharacterCard.scss\";\r\nimport death from \"../images/death.png\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterCard = (props) => {\r\n  const statusIcon = () => {\r\n    if (props.character.status !== \"Dead\") {\r\n      return \"\";\r\n    } else {\r\n      return <img className=\"card__state--icon\" src={death} alt=\"dead\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      to={`/CharacterDetail/${props.character.id}`}\r\n      className=\"characterLink\"\r\n    >\r\n      <article className=\"card\">\r\n        <div className=\"title\">\r\n          <p className=\"card__state\">{statusIcon()}</p>\r\n          <h2 className=\"card__name\">{props.character.name}</h2>\r\n        </div>\r\n        <img\r\n          src={props.character.image}\r\n          alt={props.character.name}\r\n          className=\"card__image\"\r\n        />\r\n        <p className=\"card__specie\">{props.character.specie}</p>\r\n      </article>\r\n    </Link>\r\n  );\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n  name: PropTypes.string,\r\n  image: PropTypes.string,\r\n  specie: PropTypes.string,\r\n  id: PropTypes.number,\r\n};\r\n\r\nexport default CharacterCard;\r\n","import \"../styleSheets/layout/CharacterList.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport React from \"react\";\r\nimport CharacterCard from \"./CharacterCard\";\r\n// import PropTypes from \"prop-types\";\r\n// import \"../StyleSheets/PokemonList.scss\";\r\n\r\nclass CharacterList extends React.Component {\r\n  render() {\r\n    const characterElements = this.props.characters.map((character) => {\r\n      return (\r\n        <li key={character.id} className=\"cardsContainer__cards--element\">\r\n          <CharacterCard character={character} />\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <section className=\"cardsContainer\">\r\n        <ul className=\"cardsContainer__cards\">{characterElements}</ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nCharacterList.propTypes = {\r\n  characters: PropTypes.array,\r\n};\r\n\r\nexport default CharacterList;\r\n","import \"../styleSheets/layout/FilterByName.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FilterByName = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      key: \"name\",\r\n      value: ev.target.value,\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"formName\">\r\n      <label className=\"formName__label\" htmlFor=\"name\">\r\n        Filter by name: \r\n      </label>\r\n      <input\r\n        className=\"formName__input-text\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        value={props.value}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilterByName.propTypes = {\r\n  value: PropTypes.string,\r\n  handleFilter: PropTypes.func,\r\n};\r\n\r\nexport default FilterByName;\r\n","import \"../styleSheets/layout/FilterBySpecies.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FilterBySpecies = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      key: \"species\",\r\n      value: ev.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"formSpecie\">\r\n      <label className=\"formSpecie__label\" htmlFor=\"species\">\r\n        Filter by specie:\r\n      </label>\r\n      <select\r\n        className=\"formSpecie__input-select\"\r\n        name=\"species\"\r\n        id=\"species\"\r\n        value={props.species}\r\n        onChange={handleChange}\r\n      >\r\n        <option value=\"All\">All</option>\r\n        <option value=\"Human\">Human</option>\r\n        <option value=\"Alien\">Alien</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilterBySpecies.propTypes = {\r\n  value: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n};\r\nexport default FilterBySpecies;\r\n","import \"../styleSheets/layout/Filter.scss\";\r\nimport FilterByName from \"./FilterByName\";\r\nimport FilterBySpecies from \"./FilterBySpecies\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filters = (props) => {\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <form className=\"form\" action=\"\" onSubmit={handleSubmit}>\r\n        <FilterByName handleFilter={props.handleFilter} value={props.value} />\r\n        <FilterBySpecies\r\n          handleFilter={props.handleFilter}\r\n          specie={props.specie}\r\n        />\r\n        <button className=\"reset\" type=\"reset\" onClick={props.handleReset}>\r\n          <i className=\"far fa-trash-alt card__reset--icon\"></i>\r\n          Reset\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  value: PropTypes.string,\r\n  handleFilter: PropTypes.func,\r\n  handleReset: PropTypes.func,\r\n};\r\n\r\nexport default Filters;\r\n","import \"../styleSheets/layout/FilterNoFound.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FilterNoFound = (props) => {\r\n  return (\r\n    <section className=\"noFound\">\r\n      <button className=\"noFound__returnBtn\" onClick={props.handleReturn}>\r\n        Back\r\n      </button>\r\n      <p className=\"noFound__text\">\r\n        There aren't any character with this filter options.\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nFilterNoFound.propTypes = {\r\n  handleReturn: PropTypes.func,\r\n};\r\nexport default FilterNoFound;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport death from \"../images/death.png\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../styleSheets/layout/CharacterDetail.scss\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const statusIcon = () => {\r\n    if (props.character.status !== \"Dead\") {\r\n      return \"\";\r\n    } else {\r\n      return <img className=\"detailCard__state--icon\" src={death} alt=\"dead\" />;\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"detailContainer\">\r\n      <Link to={\"/\"} className=\"returnBtn\">\r\n        Back\r\n      </Link>\r\n      <section className=\"detailCard\">\r\n        <img\r\n          className=\"detailCard__image\"\r\n          src={props.character.image}\r\n          alt={props.character.name}\r\n        />\r\n        <div className=\"detailCard__text\">\r\n          <div className=\"Cardtitle\">\r\n            <h2 className=\"detailCard__text--name\">{props.character.name}</h2>\r\n            <p className=\"detailCard__state\">{statusIcon()}</p>\r\n          </div>\r\n          <h3 className=\"detailCard__text--info\">\r\n            Specie: {props.character.specie}\r\n          </h3>\r\n          <h3 className=\"detailCard__text--info\">\r\n            Planet: {props.character.origin}\r\n          </h3>\r\n\r\n          <h3 className=\"detailCard__text--info\">\r\n            State: {props.character.status}\r\n          </h3>\r\n\r\n          <h3 className=\"detailCard__text--info\">\r\n            Episodes: {props.character.episodes}\r\n          </h3>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nCharacterDetail.propTypes = {\r\n  name: PropTypes.string,\r\n  image: PropTypes.string,\r\n  status: PropTypes.string,\r\n  origin: PropTypes.string,\r\n  specie: PropTypes.string,\r\n  episodes: PropTypes.number,\r\n  id: PropTypes.number,\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import \"../styleSheets/layout/CharacterNoFound.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterNoFound = (props) => {\r\n  return (\r\n    <section className=\"noPage\">\r\n      <Link to={\"/\"} className=\"noPage__returnBtn\" onClick={props.handleReturn}>\r\n        Back\r\n      </Link>\r\n      <p className=\"noPage__text\">Page not found</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nCharacterNoFound.propTypes = {\r\n  handleReturn: PropTypes.func,\r\n};\r\n\r\nexport default CharacterNoFound;\r\n","export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport getDataFromApi from \"../services/getDataFromApi\";\n\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport FilterNoFound from \"./FilterNoFound\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport CharacterNoFound from \"./CharacterNoFound\";\nimport logo from \"../images/logo.png\";\nimport \"../styleSheets/App.scss\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [specie, setSpecies] = useState(\"All\");\n\n  //Llamamos a los datos de la API\n  useEffect(() => {\n    getDataFromApi().then((data) => setCharacters(data));\n  }, []);\n\n  //Filtrado de datos según nombre y/o especie\n  const handleFilter = (inputChange) => {\n    if (inputChange.key === \"name\") {\n      setName(inputChange.value);\n    } else if (inputChange.key === \"species\") {\n      setSpecies(inputChange.value);\n    }\n  };\n\n  const filterCharacters = characters\n    .filter((character) => {\n      return character.name.toUpperCase().includes(name.toUpperCase());\n    })\n    .sort((a, z) => (a.name > z.name ? 1 : a.name < z.name ? -1 : 0))\n    .filter((character) => {\n      return specie === \"All\" ? true : character.specie === specie;\n    });\n\n  //Función asociada al botón de volver para limpiar los campos de filtrado\n  const handleReturn = () => {\n    setName(\"\");\n    setSpecies(\"All\");\n  };\n  //Botón de reset para limpiar los input\n  const handleReset = () => {\n    setName(\"\");\n    setSpecies(\"All\");\n  };\n\n  const renderCharacterList = () => {\n    if (filterCharacters.length === 0) {\n      return <FilterNoFound handleReturn={handleReturn} />;\n    } else {\n      return (\n        <>\n          <Filters\n            handleFilter={handleFilter}\n            handleReset={handleReset}\n            value={name}\n          />\n          <CharacterList characters={filterCharacters} />\n        </>\n      );\n    }\n  };\n\n  const renderDetail = (props) => {\n    const idUrl = props.match.params.id;\n    const selectCharacter = characters.find((character) => {\n      return character.id === parseInt(idUrl);\n    });\n    if (selectCharacter) {\n      return <CharacterDetail character={selectCharacter} />;\n    } else {\n      return <CharacterNoFound handleReset={handleReturn} />;\n    }\n  };\n\n  return (\n    <>\n      <header className=\"header\">\n        <img src={logo} alt=\"Rick and Morty\" className=\"header__logo\" />\n      </header>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" render={renderCharacterList} />\n          <Route path=\"/CharacterDetail/:id\" render={renderDetail} />\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}